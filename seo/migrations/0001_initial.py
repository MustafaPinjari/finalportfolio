# Generated by Django 5.0.1 on 2025-05-24 13:44

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='SitemapConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('include_blog_posts', models.BooleanField(default=True)),
                ('include_pages', models.BooleanField(default=True)),
                ('include_categories', models.BooleanField(default=True)),
                ('blog_update_frequency', models.CharField(choices=[('always', 'Always'), ('hourly', 'Hourly'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('yearly', 'Yearly'), ('never', 'Never')], default='weekly', max_length=10)),
                ('pages_update_frequency', models.CharField(choices=[('always', 'Always'), ('hourly', 'Hourly'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('yearly', 'Yearly'), ('never', 'Never')], default='monthly', max_length=10)),
                ('categories_update_frequency', models.CharField(choices=[('always', 'Always'), ('hourly', 'Hourly'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('yearly', 'Yearly'), ('never', 'Never')], default='monthly', max_length=10)),
                ('auto_ping_search_engines', models.BooleanField(default=True, help_text='Automatically notify search engines when sitemap is updated')),
                ('last_generated', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Sitemap Configuration',
                'verbose_name_plural': 'Sitemap Configuration',
            },
        ),
        migrations.CreateModel(
            name='SeoMetadata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('meta_title', models.CharField(blank=True, help_text='Title for search engines (50-60 characters ideal)', max_length=70, null=True)),
                ('meta_description', models.TextField(blank=True, help_text='Description for search engines (120-160 characters ideal)', max_length=160, null=True)),
                ('meta_keywords', models.CharField(blank=True, help_text='Comma-separated keywords', max_length=255, null=True)),
                ('og_title', models.CharField(blank=True, help_text='Title for social sharing', max_length=70, null=True)),
                ('og_description', models.TextField(blank=True, help_text='Description for social sharing', max_length=200, null=True)),
                ('og_image', models.ImageField(blank=True, help_text='Image for social sharing (1200x630 recommended)', null=True, upload_to='seo/og_images/')),
                ('twitter_title', models.CharField(blank=True, max_length=70, null=True)),
                ('twitter_description', models.TextField(blank=True, max_length=200, null=True)),
                ('twitter_image', models.ImageField(blank=True, help_text='Image for Twitter cards (1200x600 recommended)', null=True, upload_to='seo/twitter_images/')),
                ('canonical_url', models.URLField(blank=True, help_text='Canonical URL if different from the current URL', null=True)),
                ('no_index', models.BooleanField(default=False, help_text='Prevent search engines from indexing this page')),
                ('no_follow', models.BooleanField(default=False, help_text='Prevent search engines from following links on this page')),
                ('structured_data', models.JSONField(blank=True, help_text='JSON-LD structured data for rich results', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'SEO Metadata',
                'verbose_name_plural': 'SEO Metadata',
                'unique_together': {('content_type', 'object_id')},
            },
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(max_length=100)),
                ('is_primary', models.BooleanField(default=False, help_text='Primary/focus keyword for this content')),
                ('usage_count', models.PositiveIntegerField(default=0, help_text='How many times this keyword appears in content')),
                ('metadata', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='keywords', to='seo.seometadata')),
            ],
            options={
                'verbose_name': 'Keyword',
                'verbose_name_plural': 'Keywords',
            },
        ),
        migrations.CreateModel(
            name='SeoScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overall_score', models.PositiveIntegerField(default=0, help_text='Overall SEO score (0-100)')),
                ('content_score', models.PositiveIntegerField(default=0, help_text='Content quality score (0-100)')),
                ('technical_score', models.PositiveIntegerField(default=0, help_text='Technical SEO score (0-100)')),
                ('analyzed_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('metadata', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='score', to='seo.seometadata')),
            ],
            options={
                'verbose_name': 'SEO Score',
                'verbose_name_plural': 'SEO Scores',
            },
        ),
        migrations.CreateModel(
            name='SeoIssue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_type', models.CharField(choices=[('meta', 'Metadata'), ('content', 'Content'), ('keyword', 'Keyword'), ('technical', 'Technical'), ('performance', 'Performance')], max_length=20)),
                ('severity', models.CharField(choices=[('critical', 'Critical'), ('high', 'High'), ('medium', 'Medium'), ('low', 'Low'), ('info', 'Info')], max_length=20)),
                ('message', models.CharField(max_length=255)),
                ('details', models.TextField(blank=True, null=True)),
                ('resolved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('score', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issues', to='seo.seoscore')),
            ],
            options={
                'verbose_name': 'SEO Issue',
                'verbose_name_plural': 'SEO Issues',
            },
        ),
    ]
