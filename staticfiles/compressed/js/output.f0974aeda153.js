const menu=document.querySelector("#sidemenu");const body=document.querySelector("body");const navbar=document.querySelector("#navbar");const menubar=document.querySelector("#menubar");function openMenu(){menu.style.transform="translateX(-16rem)";}
function closeMenu(){menu.style.transform="translateX(16rem)";}
window.addEventListener("scroll",()=>{if(scrollY<50){navbar.classList.remove("bg-white","bg-opacity-50","backdrop-blur-lg","shadow-sm","dark:bg-darkTheme","dark:shadow-white/20",);menubar.classList.add("bg-opacity-50","shadow-sm","dark:border-white/50","border",);}else{navbar.classList.add("bg-white","bg-opacity-50","backdrop-blur-lg","shadow-sm","dark:bg-darkTheme","dark:shadow-white/20",);menubar.classList.remove("bg-opacity-50","shadow-sm","dark:border-white/50","border",);}});if(localStorage.theme==="dark"||(!("theme"in localStorage)&&window.matchMedia("(prefers-color-scheme: dark)").matches)){document.documentElement.classList.add("dark");}else{document.documentElement.classList.remove("dark");}
function toggleTheme(){document.documentElement.classList.toggle("dark");if(document.documentElement.classList.contains("dark")){localStorage.theme="dark";}else{localStorage.theme="light";}}
function validateRecaptcha(){var recaptchaResponse=document.getElementById("g-recaptcha-response").value;if(recaptchaResponse.length===0){document.getElementById("recaptcha-error").style.display="block";return false;}
return true;}
function recaptchaCallback(response){document.getElementById("g-recaptcha-response").value=response;document.getElementById("recaptcha-error").style.display="none";}
document.getElementById("form-submit").addEventListener("submit",function(event){if(!validateRecaptcha()){event.preventDefault();}});document.addEventListener('DOMContentLoaded',function(){const lazyImages=document.querySelectorAll('img[loading="lazy"]');const imageObserver=new IntersectionObserver((entries,observer)=>{entries.forEach(entry=>{if(entry.isIntersecting){const img=entry.target;img.classList.add('lazy-image');img.onload=()=>{img.classList.add('loaded');};observer.unobserve(img);}});});lazyImages.forEach(img=>imageObserver.observe(img));});;document.addEventListener('DOMContentLoaded',function(){console.log('User menu script loaded!');const userMenuButton=document.getElementById('user-menu-button');const userDropdown=document.getElementById('user-dropdown');if(userMenuButton&&userDropdown){console.log('Found authenticated user menu elements');userMenuButton.addEventListener('click',function(event){console.log('User menu button clicked');event.stopPropagation();userDropdown.classList.toggle('hidden');const userTypeDropdown=document.getElementById('user-type-dropdown');if(userTypeDropdown&&!userTypeDropdown.classList.contains('hidden')){userTypeDropdown.classList.add('hidden');}});document.addEventListener('click',function(event){if(!userMenuButton.contains(event.target)&&!userDropdown.contains(event.target)){userDropdown.classList.add('hidden');}});}
const userTypeButton=document.getElementById('user-type-button');const userTypeDropdown=document.getElementById('user-type-dropdown');console.log('User type button:',userTypeButton);console.log('User type dropdown:',userTypeDropdown);if(userTypeButton&&userTypeDropdown){console.log('Found user type dropdown elements');userTypeButton.addEventListener('click',function(event){console.log('User type button clicked');event.stopPropagation();event.preventDefault();userTypeDropdown.classList.toggle('hidden');userTypeButton.setAttribute('aria-expanded',userTypeDropdown.classList.contains('hidden')?'false':'true');});document.addEventListener('click',function(event){if(!userTypeButton.contains(event.target)&&!userTypeDropdown.contains(event.target)){userTypeDropdown.classList.add('hidden');userTypeButton.setAttribute('aria-expanded','false');}});const typeDropdownLinks=userTypeDropdown.querySelectorAll('a');typeDropdownLinks.forEach(link=>{link.addEventListener('click',function(event){console.log("Navigating to:",this.href);});});}else{console.log('User type dropdown elements not found');}
console.log('All buttons with ID containing "user":');document.querySelectorAll('[id*="user"]').forEach(el=>{console.log(el.id,el);});});;document.addEventListener('DOMContentLoaded',function(){console.log('Dropdown script loaded and running');const userMenuButton=document.getElementById('user-menu-button');const userDropdown=document.getElementById('user-dropdown');if(userMenuButton&&userDropdown){console.log('Found user menu elements');userMenuButton.addEventListener('click',function(e){console.log('User menu button clicked');e.stopPropagation();e.preventDefault();userDropdown.classList.toggle('hidden');});document.addEventListener('click',function(e){if(!userMenuButton.contains(e.target)&&!userDropdown.contains(e.target)){userDropdown.classList.add('hidden');}});const dropdownLinks=userDropdown.querySelectorAll('a');dropdownLinks.forEach(link=>{link.addEventListener('click',function(e){console.log('Dropdown link clicked:',this.href);userDropdown.classList.add('hidden');});});}else{console.log('User menu elements not found');}});;document.addEventListener('DOMContentLoaded',function(){const notificationButton=document.getElementById('notification-button');const notificationDropdown=document.getElementById('notification-dropdown');const notificationList=document.getElementById('notification-list');const notificationBadge=document.getElementById('notification-badge');if(notificationButton){notificationButton.addEventListener('click',function(e){e.preventDefault();notificationDropdown.classList.toggle('hidden');if(!notificationDropdown.classList.contains('hidden')){loadNotifications();}});document.addEventListener('click',function(e){if(!notificationButton.contains(e.target)&&!notificationDropdown.contains(e.target)){notificationDropdown.classList.add('hidden');}});}
function loadNotifications(){fetch('/notifications/user/recent/').then(response=>response.json()).then(data=>{renderNotifications(data.notifications);}).catch(error=>{console.error('Error loading notifications:',error);notificationList.innerHTML=`
                    <div class="px-4 py-3 text-center text-sm text-gray-500 dark:text-gray-400">
                        <p>Error loading notifications</p>
                    </div>
                `;});}
function renderNotifications(notifications){if(notifications.length===0){notificationList.innerHTML=`
                <div class="px-4 py-3 text-center text-sm text-gray-500 dark:text-gray-400">
                    <p>No notifications</p>
                </div>
            `;return;}
let html='';notifications.forEach(notification=>{const isUnread=notification.status!=='read';html+=`
                <div class="notification-item border-b border-gray-100 dark:border-gray-700 ${isUnread ? 'bg-purple-50 dark:bg-purple-900/10' : ''}">
                    <a href="${notification.url || '#'}" class="block px-4 py-3 hover:bg-gray-50 dark:hover:bg-gray-700/50">
                        <div class="flex justify-between">
                            <p class="text-sm font-medium text-gray-900 dark:text-white">${notification.title}</p>
                            <p class="text-xs text-gray-500 dark:text-gray-400">${notification.time_ago}</p>
                        </div>
                        <p class="mt-1 text-xs text-gray-500 dark:text-gray-400 line-clamp-2">${notification.message}</p>
                    </a>
                </div>
            `;});notificationList.innerHTML=html;}
function updateNotificationCount(){fetch('/notifications/user/count/').then(response=>response.json()).then(data=>{const count=data.count;if(notificationBadge){if(count>0){notificationBadge.textContent=count>99?'99+':count;notificationBadge.classList.remove('d-none');}else{notificationBadge.classList.add('d-none');}}}).catch(error=>{console.error('Error updating notification count:',error);});}
updateNotificationCount();setInterval(updateNotificationCount,60000);});;